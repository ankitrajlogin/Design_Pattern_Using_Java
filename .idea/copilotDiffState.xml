<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/p01_BASIC/Design_Payment_class/Client.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/p01_BASIC/Design_Payment_class/Client.java" />
              <option name="originalContent" value="package p01_BASIC.Design_Payment_class;&#10;&#10;public class Client {&#10;    public static void main(String[] args) {&#10;        PaymentService ps = new PaymentService();&#10;        ps.addPaymentMethod(&quot;AnkitDebitCard&quot;, new DebitCard(&quot;1234&quot;, &quot;Ankit Raj debit card&quot;)) ;&#10;        ps.addPaymentMethod(&quot;AnkitCreditCard&quot; , new DebitCard(&quot;4222&quot; , &quot;ankit raj credit card&quot;)) ;&#10;        ps.addPaymentMethod(&quot;AnkitRajUpi&quot; , new UPI(&quot;ankitraj@oksbi&quot;));&#10;&#10;        ps.addPaymentMethod(&quot;AnkitRajWallet&quot; , new Wallet()) ;&#10;&#10;        ps.makePayment(&quot;AnkitRajUpi&quot;);&#10;        ps.makePayment(&quot;AnkitCreditCard&quot;);&#10;        ps.makePayment(&quot;AnkitDebitCard&quot;);&#10;        ps.makePayment(&quot;AnkitRajWallet&quot;) ;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package p01_BASIC.Design_Payment_class;&#10;&#10;public class Client {&#10;    public static void main(String[] args) {&#10;        PaymentService ps = new PaymentService();&#10;        ps.addPaymentMethod(&quot;AnkitDebitCard&quot;, new DebitCard(&quot;1234&quot;, &quot;Ankit Raj debit card&quot;)) ;&#10;        ps.addPaymentMethod(&quot;AnkitCreditCard&quot; , new DebitCard(&quot;4222&quot; , &quot;ankit raj credit card&quot;)) ;&#10;        ps.addPaymentMethod(&quot;AnkitRajUpi&quot; , new UPI(&quot;ankitraj@oksbi&quot;));&#10;&#10;        ps.addPaymentMethod(&quot;AnkitRajWallet&quot; , new Wallet()) ;&#10;&#10;        ps.makePayment(&quot;AnkitRajUpi&quot;);&#10;        ps.makePayment(&quot;AnkitCreditCard&quot;);&#10;        ps.makePayment(&quot;AnkitDebitCard&quot;);&#10;        ps.makePayment(&quot;AnkitRajWallet&quot;) ;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/p01_BASIC/Design_Payment_class/PaymentService.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/p01_BASIC/Design_Payment_class/PaymentService.java" />
              <option name="originalContent" value="package p01_BASIC.Design_Payment_class;&#10;&#10;import java.util.HashMap;&#10;&#10;public class PaymentService&#10;{&#10;//    Instance Variable&#10;    HashMap&lt;String , PaymentMethod&gt; paymentMethods ;&#10;&#10;    public PaymentService() {&#10;        paymentMethods = new HashMap&lt;&gt;();&#10;    }&#10;&#10;    public void addPaymentMethod(String name , PaymentMethod pm){&#10;        paymentMethods.put(name , pm) ;&#10;    }&#10;&#10;    public void makePayment(String name){&#10;        PaymentMethod pm = paymentMethods.get(name) ;&#10;        if (pm == null) {&#10;            System.out.println(&quot;Payment method '&quot; + name + &quot;' not found.&quot;);&#10;            return;&#10;        }&#10;        pm.pay() ; // Run time Polymorphism&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package p01_BASIC.Design_Payment_class;&#10;&#10;import java.util.HashMap;&#10;&#10;public class PaymentService&#10;{&#10;//    Instance Variable&#10;    HashMap&lt;String , PaymentMethod&gt; paymentMethods ;&#10;&#10;    public PaymentService() {&#10;        paymentMethods = new HashMap&lt;&gt;();&#10;    }&#10;&#10;    public void addPaymentMethod(String name , PaymentMethod pm){&#10;        paymentMethods.put(name , pm) ;&#10;    }&#10;&#10;    public void makePayment(String name){&#10;        PaymentMethod pm = paymentMethods.get(name) ;&#10;        if (pm == null) {&#10;            System.out.println(&quot;Payment method '&quot; + name + &quot;' not found.&quot;);&#10;            return;&#10;        }&#10;        pm.pay() ; // Run time Polymorphism&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>